idea安装lombok插件

执行sql文件

配置域名：
修改：C:\Windows\System32\drivers\etc\hosts

127.0.0.1 dev-login.paascloud.net
127.0.0.1 dev-admin.paascloud.net
127.0.0.1 dev-api.paascloud.net
127.0.0.1 dev-mall.paascloud.net
127.0.0.1 paascloud-discovery
127.0.0.1 paascloud-eureka
127.0.0.1 paascloud-gateway
127.0.0.1 paascloud-monitor
127.0.0.1 paascloud-zipkin
127.0.0.1 paascloud-provider-uac
127.0.0.1 paascloud-provider-mdc
127.0.0.1 paascloud-provider-omc
127.0.0.1 paascloud-provider-opc


192.168.137.4 paascloud-db-mysql
192.168.137.172 paascloud-db-redis
192.168.137.4 paascloud-mq-rabbit
192.168.137.4 paascloud-mq-rocket
192.168.137.140 paascloud-provider-zk

192.168.241.101 paascloud-zk-01
192.168.241.102 paascloud-zk-02
192.168.241.103 paascloud-zk-03


nginx配置：
server {
    listen       80;
    server_name  dev-admin.paascloud.net;
    location / {
        proxy_pass http://localhost:7020;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}
server {
    listen       80;
    server_name  dev-login.paascloud.net;
    location / {
        proxy_pass http://localhost:7010;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}
server {
    listen       80;
    server_name  dev-mall.paascloud.net;
    location / {
        proxy_pass http://localhost:7030;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}
server {
    listen       80;
    server_name  dev-api.paascloud.net;
    location ~ {
        proxy_pass   http://localhost:7979;
    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}


微服务启动顺序

1. paascloud-eureka
2. paascloud-discovery
3. paascloud-provider-uac
4. paascloud-gateway
5. 剩下微服务无启动数序要求




https://github.com/paascloud/paascloud-master
https://document.paascloud.net/xiang-mu-bu-shu.html
https://document.paascloud.net/


git clone https://github.com/172226325/paascloud-master.git
git clone https://github.com/172226325/paascloud-example.git
git clone https://github.com/172226325/paascloud-login-web.git
git clone https://github.com/172226325/elastic-job-lite-starter-master.git
git clone https://github.com/172226325/paascloud-doc.git
git clone https://github.com/172226325/paascloud-config-repo.git
git clone https://github.com/172226325/paascloud-mall-web.git

clean install -DskipTests



相关pull request操作（来源网络资料）：
登录git hub 进入相关的项目页，点击fork，然后在自己的账号下会根据该项目创建出一个仓库
~  git clone https://github.com/172226325/paascloud-master.git   //克隆一个仓库到本地
~  git add xxx                                                                   //进行一些修改 
~  git commit -m "xxx"                                                    //提交
~  git push origin master                                                //推送至远程仓库
然后进入github，到自己fork出项目对应的页面
  点击new pull request，在弹出的页面中，使用create pull request即可进行pull request操作

设置fork项目的同步更新：
  git remote add upstream https://github.com/paascloud/paascloud-master.git  //也就是将被fork的仓库作为其上游仓库
  git remote -v  //查看状态
  git fetch upstream  //执行fork项目的同步
  git checkout master  //切换到当前master分支
  git merge upstream/master  //将上游分支的内容合并到本地master









